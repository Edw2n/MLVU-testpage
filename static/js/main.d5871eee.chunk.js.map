{"version":3,"sources":["Question.js","App.js","reportWebVitals.js","index.js"],"names":["Question","number","setAnswer","rootDir","ids","Array","from","keys","React","useEffect","itemClick","a","d3","this","classed","data","svg","attr","style","selectAll","remove","append","enter","d","parseInt","on","console","log","drawGrid","className","src","alt","id","App","nueron_list","expRootDir","madryRootDirs","map","item","lucentRootDirs","rootDirs","slice","length","questionNum","useState","reduce","acc","curr","totalInfo","setTotalInfo","defaultInfo","userInfo","setUserInfo","updateInfoToggle","prevState","includes","filter","updateUserInfo","key","event","target","value","Object","width","type","onChange","onClick","notOK","forEach","push","content","fileName","contentType","document","createElement","file","Blob","href","URL","createObjectURL","download","click","JSON","stringify","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5871eee.chunk.js","sourcesContent":["import './Question.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction Question({number,setAnswer,rootDir}) {\r\n  let ids = Array.from(Array(9).keys());\r\n\r\n  React.useEffect(() => {\r\n\r\n    console.log('in useEffect');\r\n\r\n    async function drawGrid() {\r\n      // TODO draw the map using d3\r\n      const svg = d3\r\n      .selectAll(`#Options_${number}`);\r\n      let w = 90;\r\n      let h = 90;\r\n\r\n      function itemClick(){\r\n        d3\r\n          .select(this)\r\n          .classed('clicked',!d3.select(this).classed('clicked'))\r\n          \r\n        setAnswer(number, d3.select(this).data()[0]+1)\r\n        \r\n      }  \r\n\r\n      svg\r\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n        .style(\"background-color\", \"transparent\")\r\n        .attr(\"viewBox\", `0 0 ${w} ${h}`)\r\n        .classed(\"svg-content\", true)\r\n        .selectAll('*').remove();\r\n\r\n        svg.append(\"defs\")\r\n        .selectAll(\"pattern\")\r\n        .data(ids)\r\n        .enter()\r\n        .append('pattern')\r\n        .attr(\"id\", (d)=>`img_${number}_${d}`)\r\n        .attr(\"width\",\"100%\")\r\n        .attr('height',\"100%\")\r\n        .attr(\"patternContentUnits\", \"objectBoundingBox\")\r\n        .append(\"image\")\r\n        .attr(\"height\",\"1\") // value is ratio : \"image height /pattern height\"\r\n        .attr(\"width\",\"1\") // value is ratio : \"image widht /pattern width\"\r\n        .attr(\"xlink:href\", // use square size image\r\n            (d)=>`${rootDir}/options/option${d+1}.png`);\r\n\r\n      svg.append('g')\r\n      .selectAll('rect')\r\n      .data(ids)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('id', (d) => `rect_${number}_${d}`)\r\n      .attr('x', (d) => parseInt(d/3)*30+1)\r\n      .attr('y', (d) => (d % 3) * 30+1)\r\n      .attr('width', 28)\r\n      .attr('height', 28)\r\n      .style(\"fill\", // use square size image\r\n                (d)=>`url(#img_${number}_${d})`)\r\n      .on('click', itemClick)\r\n    };\r\n    drawGrid();\r\n\r\n\r\n  },[]);\r\n  return (\r\n    <div className=\"Question\">\r\n      <div className='Question-Title'>\r\n        <text className='Question-Text'>Question {number}</text>\r\n      </div>\r\n      <div className='Container'>\r\n        <img src={rootDir+'/attribution/basic_fv.png'} className=\"Target-FV\" alt=\"logo\" />\r\n        <div className=\"Option-box\">\r\n          <svg id={'Options_'+number} className='Options'></svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import './App.css';\nimport Question from './Question.js';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  let nueron_list = [132, 210, 233, 291, 355, 356, 360, 577, 660, 735, 840, 862, 904, 906, 908, 997, 1173, 1526, 1591, 1797, 1895, 1943, 1954, 1994, 1997, 2031]\n  let expRootDir = 'full_spec11/'\n  let madryRootDirs = nueron_list.map(item => {\n    return expRootDir+'nueron_' + (item) + '/Lucent';\n  })\n\n  let lucentRootDirs = nueron_list.map(item => {\n    return expRootDir+'nueron_' + (item) + '/Madry';\n  })\n\n  let rootDirs = [...madryRootDirs.slice(0,nueron_list.length/2)\n    , ...lucentRootDirs.slice(0,nueron_list.length/2)\n    , ...lucentRootDirs.slice(nueron_list.length/2,nueron_list.length)\n    , ...madryRootDirs.slice(nueron_list.length/2,nueron_list.length) ]\n\n  let questionNum = rootDirs.length\n  const [totalInfo, setTotalInfo] = useState(\n    Array.from(Array(questionNum).keys()).reduce((acc, curr) => (acc[curr + 1] = [], acc), {})\n  )\n\n  let defaultInfo = {\n    'name': '',\n    'age': '',\n    'gender' :'',\n    'major': '', \n    'backgrounds': ''\n  }\n\n  const [userInfo, setUserInfo] = useState(defaultInfo)\n\n  function updateInfoToggle(number, data) {\n    setTotalInfo(prevState => ({\n      ...prevState,\n      [number]: prevState[number].includes(data) ? prevState[number].filter(d => d !== data) : [...prevState[number], data]\n    })\n    );\n  }\n\n  function updateUserInfo(key, event) {\n    setUserInfo(prevState => ({\n      ...prevState,\n      [key]: event.target.value\n    }))\n\n  }\n\n  function download(content, fileName, contentType) {\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n   }\n   \n  function submit() {\n    let notOK = [] // totalInfo update 할때 notOK 계산해 놓는게 나으려나\n\n    Object.keys(totalInfo).forEach(function (item) {\n      if (totalInfo[item].length !== 3) {\n        notOK.push(item)\n      }\n    })\n\n    if(notOK.length==0){\n      download(JSON.stringify(userInfo), \"pilot_\"+userInfo[\"name\"]+\".json\", \"text/plain\");\n    }\n\n    return alert(\n      JSON.stringify(userInfo) + '\\n'\n      + `${notOK.length > 0 ? 'pick only 3 options: ' + notOK : 'All Done!!!!'}`\n      + '\\n' + JSON.stringify(totalInfo)\n    )\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Interpretability Test (Pilot)\n        </p>\n      </header>\n\n      <div className='userInfoForm'>\n        <div className='Form-above'>\n          <div className='Form-Left'>\n            {Object.keys(defaultInfo).slice(0,2).map(key => {\n              console.log(key)\n              return (<div className='Input-Row'>\n                <text style={{ width: '60px' }}> {key} </text>\n                <input\n                  type=\"text\"\n                  value={userInfo[key]}\n                  onChange={event => updateUserInfo(key, event)}\n                />\n              </div>);\n            })}\n\n          </div>\n\n          <div className='Form-Left'>\n            {Object.keys(defaultInfo).slice(2,4).map(key => {\n              console.log(key)\n              return (<div className='Input-Row'>\n                <text style={{ width: '60px' }}> {key} </text>\n                <input\n                  type=\"text\"\n                  value={userInfo[key]}\n                  onChange={event => updateUserInfo(key, event)}\n                />\n              </div>);\n            })}\n\n          </div>\n\n        </div>\n\n        <div className='Input-full-Row'>\n          <text style={{ width: '100px'}}> {Object.keys(userInfo).slice(-1)[0]} </text>\n          <textarea\n            type=\"text\"\n            value={userInfo[Object.keys(userInfo).slice(-1)[0]]}\n            onChange={event => updateUserInfo(Object.keys(userInfo).slice(-1)[0], event)}\n          />\n        </div>\n      </div>\n\n      {Array.from(Array(questionNum).keys()).map(item => {\n        return (<div>\n          <Question number={item + 1} setAnswer={updateInfoToggle} rootDir={rootDirs[item]}></Question>\n        </div>);\n      })}\n\n      <button onClick={submit}>Submit</button>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}